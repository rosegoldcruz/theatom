version: '3.8'

services:
  atom-arbitrage:
    build: .
    container_name: atom-v2
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
    ports:
      - "3001:3001"
      - "9090:9090"  # Prometheus metrics
    depends_on:
      - redis
      - postgres
    networks:
      - atom-network
    healthcheck:
      test: ["CMD", "python", "atom_cli.py", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: atom-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - atom-network
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: atom-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=atom_db
      - POSTGRES_USER=atom_user
      - POSTGRES_PASSWORD=atom_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - atom-network

  grafana:
    image: grafana/grafana:latest
    container_name: atom-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - atom-network
    depends_on:
      - prometheus

  prometheus:
    image: prom/prometheus:latest
    container_name: atom-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - atom-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

volumes:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data:

networks:
  atom-network:
    driver: bridge
